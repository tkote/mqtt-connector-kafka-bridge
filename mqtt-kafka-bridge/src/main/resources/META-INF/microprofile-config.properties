
# Microprofile server properties
server.port=8181
server.host=0.0.0.0

# MQTT Connector
#mp.messaging.connector.mqtt-connector.server=localhost
#mp.messaging.connector.mqtt-connector.port=1883

# Kafka Connector
mp.messaging.connector.helidon-kafka.bootstrap.servers=localhost:9092
mp.messaging.connector.helidon-kafka.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.connector.helidon-kafka.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.connector.helidon-kafka.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.connector.helidon-kafka.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# MQTT -> Kafka Bridge
mp.messaging.incoming.mqtt-sub.connector=mqtt-connector
mp.messaging.incoming.mqtt-sub.server=localhost
mp.messaging.incoming.mqtt-sub.port=1883
mp.messaging.incoming.mqtt-sub.topic=to-kafka/#
mp.messaging.incoming.mqtt-sub.qos=1
mp.messaging.incoming.mqtt-sub.payload-type=string

mp.messaging.outgoing.kafka-pub.connector=helidon-kafka
mp.messaging.outgoing.kafka-pub.topic=from-mqtt

# REST POST -> MQTT
mp.messaging.outgoing.mqtt-post.connector=mqtt-connector
mp.messaging.outgoing.mqtt-post.server=localhost
mp.messaging.outgoing.mqtt-post.port=1883
mp.messaging.outgoing.mqtt-post.topic=to-kafka
mp.messaging.outgoing.mqtt-post.qos=1

# REST POST â†’ Kafka
mp.messaging.outgoing.kafka-post.connector=helidon-kafka
mp.messaging.outgoing.kafka-post.topic=kafka-post
