<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.example.messaging</groupId>
        <artifactId>mqtt</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>org.example.messaging</groupId>
    <artifactId>mqtt-kafka-bridge</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>mqtt-kafka-bridge</name>

    <properties>
        <!--docker.file>Dockerfile</docker.file-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.helidon.microprofile.messaging</groupId>
            <artifactId>helidon-microprofile-messaging</artifactId>
        </dependency>

        <dependency>
            <groupId>io.helidon.messaging.kafka</groupId>
            <artifactId>helidon-messaging-kafka</artifactId>
        </dependency>

        <dependency>
            <groupId>io.helidon.microprofile.messaging</groupId>
            <artifactId>helidon-microprofile-messaging-health</artifactId>
        </dependency>

        <dependency>
            <groupId>org.example.messaging</groupId>
            <artifactId>mqtt-connector</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.7.32</version>
        </dependency>

        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jandex</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.helidon.build-tools</groupId>
                <artifactId>helidon-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>third-party-license-report</id>
                    </execution>
                </executions>
            </plugin>

            <!-- making docker image -->
<!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <! - - docker build - - >
                    <execution>
                        <id>docker-build</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <arguments>
                                <argument>build</argument>
                                <argument>-t</argument>
                                <argument>${project.artifactId}:${project.version}</argument>
                                <argument>-t</argument>
                                <argument>${project.artifactId}:latest</argument>
                                <argument>-f</argument>
                                <argument>${docker.file}</argument>
                                <argument>.</argument>
                            </arguments>
                            <workingDirectory>${project.basedir}</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
-->
        </plugins>
    </build>
</project>
